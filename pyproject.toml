[tool.poetry]
name = "iscc-sci"
version = "0.1.0"
description = "ISCC - Semantic Code Image"
authors = ["Titusz <tp@py7.de>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://iscc.codes"
repository = "https://github.com/iscc/iscc-sci"
keywords=["iscc", "semantic", "media", "hash", "similarity"]
classifiers=[
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Cython",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
]



[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pillow = "*"
onnxruntime = "*"
loguru = "*"
blake3 = "*"
platformdirs = "*"

[tool.poetry.group.test.dependencies]
pytest = "*"
iscc-samples = "*"

[tool.poetry.group.dev.dependencies]
poethepoet = "*"
black = "*"
onnx = "*"
twine = "*"

[tool.poetry.group.docs.dependencies]
mdformat-gfm = "*"

[tool.black]
skip-string-normalization = false
line-length = 100
target-version = ['py38']

[tool.poe.tasks]
format-code = { cmd = "poetry run black .", help = "Code style formating with black" }
format-md = { cmd = "mdformat --wrap 100 --end-of-line lf README.md", help = "Markdown formating with mdformat" }
test = { cmd = "poetry run pytest", help = "Run tests" }
all = ["format-code", "format-md", "test"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
